spring:
  application:
    name: Get_A_Beer
  h2:
    console:
      enabled: true
      path: /h2
  cache:
    type: redis
  redis:
    host: ${REDIS_ENDPOINT}
    port: 6379
  datasource:
    url: jdbc:h2:mem:test
    properties:
      rewriteBatchedStatements: true
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: true
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        default_batch_fetch_size: 100
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 100
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: https://www.getabeer.co.kr/oauth/callback/google
            authorization-grant-type: authorization_code
            scope:
              - email
              - profile
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: https://www.getabeer.co.kr/oauth/callback/kakao
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope:
              - account_email
              - profile_nickname
              - profile_image
            client_name: Kakao
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: https://www.getabeer.co.kr/oauth/callback/naver
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            scope:
              - email
              - name
              - profile_image
            client-name: Naver
        provider:
          kakao:
            user-name-attribute: id
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
          naver:
            user-name-attribute: response
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            user-info-uri: https://openapi.naver.com/v1/nid/me
            token-uri: https://nid.naver.com/oauth2.0/token
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SMTP_GOOGLE_ACCOUNT}
    password: ${SMTP_GOOGLE_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  #            required: true
  #          socketFactory:
  #            class: javax.net.ssl.SSLSocketFactory
  #            fallback: false
  #            port: 587
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB
  cloud:
    gcp:
      credentials:
        location: classpath:/getabeer-376509-6310d68578f1.json
cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY}
      secretKey: ${AWS_SECRET_KEY}
    s3:
      bucket: getabeer
      dir: image
    region:
      static: ap-northeast-2
    stack:
      auto: false
userId:
  admin: admin
mail:
  address:
    admin: admin@gmail.com
jwt:
  secret-key: ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 120
  refresh-token-expiration-minutes: 1440
app:
  oauth2:
    authorizedRedirectUris:
      - https://server.getabeer.co.kr/oauth/redirect
webdriver:
  chrome:
    driverid: webdriver.chrome.driver
    location: src/main/java/be/domain/crawler/javaCrawler/chromedriver
elasticsearch:
  host: localhost
  port: 9200
python:
  crawler: src/main/java/be/domain/crawler/pycrawler/crawler.py
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    tags:
      application: ${spring.application.name}
logging:
  config: classpath:logback.xml
  level:
    org:
      springframework:
        data:
          elasticsearch:
            client:
              WIRE: TRACE

discord:
  webhook: ${WEBHOOK}
